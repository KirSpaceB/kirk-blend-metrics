"use strict";(self.webpackChunkblend_metrics=self.webpackChunkblend_metrics||[]).push([[789],{"./stories/combobox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultLg:()=>DefaultLg,DefaultLgRightIcon:()=>DefaultLgRightIcon,DefaultSm:()=>DefaultSm,DefaultSmRightIcon:()=>DefaultSmRightIcon,GrayLg:()=>GrayLg,GrayLgRightIcon:()=>GrayLgRightIcon,GraySm:()=>GraySm,GraySmRightIcon:()=>GraySmRightIcon,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _DefaultSm$parameters,_DefaultSm$parameters2,_DefaultSmRightIcon$p,_DefaultSmRightIcon$p2,_DefaultLg$parameters,_DefaultLg$parameters2,_DefaultLgRightIcon$p,_DefaultLgRightIcon$p2,_GraySm$parameters,_GraySm$parameters2,_GraySmRightIcon$para,_GraySmRightIcon$para2,_GrayLg$parameters,_GrayLg$parameters2,_GrayLgRightIcon$para,_GrayLgRightIcon$para2,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_components_ui__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./components/ui/index.ts"),_components_icons__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./components/icons/index.ts"),__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement;function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__.Z)(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}const __WEBPACK_DEFAULT_EXPORT__={title:"Combobox"};var DefaultSm=function DefaultSm(){var _React$useState=react__WEBPACK_IMPORTED_MODULE_0__.useState([{id:1,name:"Wade Cooper"},{id:2,name:"Arlene Mccoy"},{id:3,name:"Devon Webb"},{id:4,name:"Tom Cook"},{id:5,name:"Tanya Fox"},{id:6,name:"Hellen Schmidt"},{id:7,name:"Chris Torres"},{id:8,name:"Max"},{id:9,name:"David"},{id:10,name:"Logan"},{id:11,name:"Andrew"}]),users=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState,1)[0],_React$useState3=react__WEBPACK_IMPORTED_MODULE_0__.useState({}),_React$useState4=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState3,2),selected=_React$useState4[0],setSelected=_React$useState4[1],_React$useState5=react__WEBPACK_IMPORTED_MODULE_0__.useState(""),_React$useState6=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState5,2),query=_React$useState6[0],setQuery=_React$useState6[1],filteredPeople=""===query?users:users.filter((function(user){return user.name.toLowerCase().replace(/\s+/g,"").includes(query.toLowerCase().replace(/\s+/g,""))}));return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.hQY,{value:selected,onChange:setSelected},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.f_M,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.gA1,{displayValue:function displayValue(user){return user.name},onChange:function onChange(event){return setQuery(event.target.value)}}),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.Q$m,null,__jsx(_components_icons__WEBPACK_IMPORTED_MODULE_3__.HN,null))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.Ukc,{afterLeave:function afterLeave(){return setQuery("")}},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.L5w,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.xrM,{className:"h-[304px]"},filteredPeople.map((function(user){return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.O2b,{key:user.id,value:user},user.name)}))))))};DefaultSm.displayName="DefaultSm";var DefaultSmRightIcon=function DefaultSmRightIcon(){var _React$useState7=react__WEBPACK_IMPORTED_MODULE_0__.useState([{id:1,name:"Wade Cooper"},{id:2,name:"Arlene Mccoy"},{id:3,name:"Devon Webb"},{id:4,name:"Tom Cook"},{id:5,name:"Tanya Fox"},{id:6,name:"Hellen Schmidt"},{id:7,name:"Chris Torres"},{id:8,name:"Max"},{id:9,name:"David"},{id:10,name:"Logan"},{id:11,name:"Andrew"}]),users=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState7,1)[0],_React$useState9=react__WEBPACK_IMPORTED_MODULE_0__.useState({}),_React$useState10=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState9,2),selected=_React$useState10[0],setSelected=_React$useState10[1],_React$useState11=react__WEBPACK_IMPORTED_MODULE_0__.useState(""),_React$useState12=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState11,2),query=_React$useState12[0],setQuery=_React$useState12[1],filteredPeople=""===query?users:users.filter((function(user){return user.name.toLowerCase().replace(/\s+/g,"").includes(query.toLowerCase().replace(/\s+/g,""))}));return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.hQY,{value:selected,onChange:setSelected},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.f_M,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.gA1,{className:"pl-3 pr-[34px]",displayValue:function displayValue(user){return user.name},onChange:function onChange(event){return setQuery(event.target.value)}}),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.Q$m,{align:"right"},__jsx(_components_icons__WEBPACK_IMPORTED_MODULE_3__.HN,null))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.Ukc,{afterLeave:function afterLeave(){return setQuery("")}},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.L5w,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.xrM,{className:"h-[304px]"},filteredPeople.map((function(user){return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.O2b,{key:user.id,value:user},user.name)}))))))};DefaultSmRightIcon.displayName="DefaultSmRightIcon";var DefaultLg=function DefaultLg(){var _React$useState13=react__WEBPACK_IMPORTED_MODULE_0__.useState([{id:1,name:"Wade Cooper"},{id:2,name:"Arlene Mccoy"},{id:3,name:"Devon Webb"},{id:4,name:"Tom Cook"},{id:5,name:"Tanya Fox"},{id:6,name:"Hellen Schmidt"},{id:7,name:"Chris Torres"},{id:8,name:"Max"},{id:9,name:"David"},{id:10,name:"Logan"},{id:11,name:"Andrew"}]),users=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState13,1)[0],_React$useState15=react__WEBPACK_IMPORTED_MODULE_0__.useState({}),_React$useState16=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState15,2),selected=_React$useState16[0],setSelected=_React$useState16[1],_React$useState17=react__WEBPACK_IMPORTED_MODULE_0__.useState(""),_React$useState18=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState17,2),query=_React$useState18[0],setQuery=_React$useState18[1],filteredPeople=""===query?users:users.filter((function(user){return user.name.toLowerCase().replace(/\s+/g,"").includes(query.toLowerCase().replace(/\s+/g,""))}));return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.hQY,{className:"w-[320px]",value:selected,onChange:setSelected},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.f_M,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.gA1,{size:"lg",displayValue:function displayValue(user){return user.name},onChange:function onChange(event){return setQuery(event.target.value)}}),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.Q$m,{size:"lg"},__jsx(_components_icons__WEBPACK_IMPORTED_MODULE_3__.HN,{className:"h-5 w-5"}))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.Ukc,{afterLeave:function afterLeave(){return setQuery("")}},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.L5w,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.xrM,{className:"h-[304px]"},filteredPeople.map((function(user){return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.O2b,{key:user.id,value:user},user.name)}))))))};DefaultLg.displayName="DefaultLg";var DefaultLgRightIcon=function DefaultLgRightIcon(){var _React$useState19=react__WEBPACK_IMPORTED_MODULE_0__.useState([{id:1,name:"Wade Cooper"},{id:2,name:"Arlene Mccoy"},{id:3,name:"Devon Webb"},{id:4,name:"Tom Cook"},{id:5,name:"Tanya Fox"},{id:6,name:"Hellen Schmidt"},{id:7,name:"Chris Torres"},{id:8,name:"Max"},{id:9,name:"David"},{id:10,name:"Logan"},{id:11,name:"Andrew"}]),users=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState19,1)[0],_React$useState21=react__WEBPACK_IMPORTED_MODULE_0__.useState({}),_React$useState22=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState21,2),selected=_React$useState22[0],setSelected=_React$useState22[1],_React$useState23=react__WEBPACK_IMPORTED_MODULE_0__.useState(""),_React$useState24=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState23,2),query=_React$useState24[0],setQuery=_React$useState24[1],filteredPeople=""===query?users:users.filter((function(user){return user.name.toLowerCase().replace(/\s+/g,"").includes(query.toLowerCase().replace(/\s+/g,""))}));return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.hQY,{className:"w-[320px]",value:selected,onChange:setSelected},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.f_M,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.gA1,{className:"pl-3.5 pr-[42px]",size:"lg",displayValue:function displayValue(user){return user.name},onChange:function onChange(event){return setQuery(event.target.value)}}),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.Q$m,{size:"lg",align:"right"},__jsx(_components_icons__WEBPACK_IMPORTED_MODULE_3__.HN,{className:"h-5 w-5"}))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.Ukc,{afterLeave:function afterLeave(){return setQuery("")}},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.L5w,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.xrM,{className:"h-[304px]"},filteredPeople.map((function(user){return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.O2b,{key:user.id,value:user},user.name)}))))))};DefaultLgRightIcon.displayName="DefaultLgRightIcon";var GraySm=function GraySm(){var _React$useState25=react__WEBPACK_IMPORTED_MODULE_0__.useState([{id:1,name:"Wade Cooper"},{id:2,name:"Arlene Mccoy"},{id:3,name:"Devon Webb"},{id:4,name:"Tom Cook"},{id:5,name:"Tanya Fox"},{id:6,name:"Hellen Schmidt"},{id:7,name:"Chris Torres"},{id:8,name:"Max"},{id:9,name:"David"},{id:10,name:"Logan"},{id:11,name:"Andrew"}]),users=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState25,1)[0],_React$useState27=react__WEBPACK_IMPORTED_MODULE_0__.useState({}),_React$useState28=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState27,2),selected=_React$useState28[0],setSelected=_React$useState28[1],_React$useState29=react__WEBPACK_IMPORTED_MODULE_0__.useState(""),_React$useState30=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState29,2),query=_React$useState30[0],setQuery=_React$useState30[1],filteredPeople=""===query?users:users.filter((function(user){return user.name.toLowerCase().replace(/\s+/g,"").includes(query.toLowerCase().replace(/\s+/g,""))}));return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.hQY,{value:selected,onChange:setSelected},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.f_M,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.gA1,{visual:"gray",displayValue:function displayValue(user){return user.name},onChange:function onChange(event){return setQuery(event.target.value)}}),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.Q$m,null,__jsx(_components_icons__WEBPACK_IMPORTED_MODULE_3__.HN,null))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.Ukc,{afterLeave:function afterLeave(){return setQuery("")}},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.L5w,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.xrM,{className:"h-[304px]"},filteredPeople.map((function(user){return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.O2b,{key:user.id,value:user},user.name)}))))))};GraySm.displayName="GraySm";var GraySmRightIcon=function GraySmRightIcon(){var _React$useState31=react__WEBPACK_IMPORTED_MODULE_0__.useState([{id:1,name:"Wade Cooper"},{id:2,name:"Arlene Mccoy"},{id:3,name:"Devon Webb"},{id:4,name:"Tom Cook"},{id:5,name:"Tanya Fox"},{id:6,name:"Hellen Schmidt"},{id:7,name:"Chris Torres"},{id:8,name:"Max"},{id:9,name:"David"},{id:10,name:"Logan"},{id:11,name:"Andrew"}]),users=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState31,1)[0],_React$useState33=react__WEBPACK_IMPORTED_MODULE_0__.useState({}),_React$useState34=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState33,2),selected=_React$useState34[0],setSelected=_React$useState34[1],_React$useState35=react__WEBPACK_IMPORTED_MODULE_0__.useState(""),_React$useState36=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState35,2),query=_React$useState36[0],setQuery=_React$useState36[1],filteredPeople=""===query?users:users.filter((function(user){return user.name.toLowerCase().replace(/\s+/g,"").includes(query.toLowerCase().replace(/\s+/g,""))}));return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.hQY,{value:selected,onChange:setSelected},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.f_M,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.gA1,{visual:"gray",className:"pl-3 pr-[34px]",displayValue:function displayValue(user){return user.name},onChange:function onChange(event){return setQuery(event.target.value)}}),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.Q$m,{align:"right"},__jsx(_components_icons__WEBPACK_IMPORTED_MODULE_3__.HN,null))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.Ukc,{afterLeave:function afterLeave(){return setQuery("")}},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.L5w,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.xrM,{className:"h-[304px]"},filteredPeople.map((function(user){return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.O2b,{key:user.id,value:user},user.name)}))))))};GraySmRightIcon.displayName="GraySmRightIcon";var GrayLg=function GrayLg(){var _React$useState37=react__WEBPACK_IMPORTED_MODULE_0__.useState([{id:1,name:"Wade Cooper"},{id:2,name:"Arlene Mccoy"},{id:3,name:"Devon Webb"},{id:4,name:"Tom Cook"},{id:5,name:"Tanya Fox"},{id:6,name:"Hellen Schmidt"},{id:7,name:"Chris Torres"},{id:8,name:"Max"},{id:9,name:"David"},{id:10,name:"Logan"},{id:11,name:"Andrew"}]),users=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState37,1)[0],_React$useState39=react__WEBPACK_IMPORTED_MODULE_0__.useState({}),_React$useState40=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState39,2),selected=_React$useState40[0],setSelected=_React$useState40[1],_React$useState41=react__WEBPACK_IMPORTED_MODULE_0__.useState(""),_React$useState42=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState41,2),query=_React$useState42[0],setQuery=_React$useState42[1],filteredPeople=""===query?users:users.filter((function(user){return user.name.toLowerCase().replace(/\s+/g,"").includes(query.toLowerCase().replace(/\s+/g,""))}));return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.hQY,{className:"w-[320px]",value:selected,onChange:setSelected},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.f_M,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.gA1,{size:"lg",visual:"gray",displayValue:function displayValue(user){return user.name},onChange:function onChange(event){return setQuery(event.target.value)}}),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.Q$m,{size:"lg"},__jsx(_components_icons__WEBPACK_IMPORTED_MODULE_3__.HN,{className:"h-5 w-5"}))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.Ukc,{afterLeave:function afterLeave(){return setQuery("")}},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.L5w,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.xrM,{className:"h-[304px]"},filteredPeople.map((function(user){return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.O2b,{key:user.id,value:user},user.name)}))))))};GrayLg.displayName="GrayLg";var GrayLgRightIcon=function GrayLgRightIcon(){var _React$useState43=react__WEBPACK_IMPORTED_MODULE_0__.useState([{id:1,name:"Wade Cooper"},{id:2,name:"Arlene Mccoy"},{id:3,name:"Devon Webb"},{id:4,name:"Tom Cook"},{id:5,name:"Tanya Fox"},{id:6,name:"Hellen Schmidt"},{id:7,name:"Chris Torres"},{id:8,name:"Max"},{id:9,name:"David"},{id:10,name:"Logan"},{id:11,name:"Andrew"}]),users=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState43,1)[0],_React$useState45=react__WEBPACK_IMPORTED_MODULE_0__.useState({}),_React$useState46=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState45,2),selected=_React$useState46[0],setSelected=_React$useState46[1],_React$useState47=react__WEBPACK_IMPORTED_MODULE_0__.useState(""),_React$useState48=(0,_Users_kirkflores_Documents_Kirk_s_MacBook_Air_InternshipRepo_kirk_blend_metrics_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_React$useState47,2),query=_React$useState48[0],setQuery=_React$useState48[1],filteredPeople=""===query?users:users.filter((function(user){return user.name.toLowerCase().replace(/\s+/g,"").includes(query.toLowerCase().replace(/\s+/g,""))}));return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.hQY,{className:"w-[320px]",value:selected,onChange:setSelected},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.f_M,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.gA1,{className:"pl-3.5 pr-[42px]",size:"lg",visual:"gray",displayValue:function displayValue(user){return user.name},onChange:function onChange(event){return setQuery(event.target.value)}}),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.Q$m,{size:"lg",align:"right"},__jsx(_components_icons__WEBPACK_IMPORTED_MODULE_3__.HN,{className:"h-5 w-5"}))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.Ukc,{afterLeave:function afterLeave(){return setQuery("")}},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.L5w,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.xrM,{className:"h-[304px]"},filteredPeople.map((function(user){return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_2__.O2b,{key:user.id,value:user},user.name)}))))))};GrayLgRightIcon.displayName="GrayLgRightIcon",DefaultSm.parameters=_objectSpread(_objectSpread({},DefaultSm.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_DefaultSm$parameters=DefaultSm.parameters)||void 0===_DefaultSm$parameters?void 0:_DefaultSm$parameters.docs),{},{source:_objectSpread({originalSource:'() => {\n  const [users] = React.useState([{\n    id: 1,\n    name: "Wade Cooper"\n  }, {\n    id: 2,\n    name: "Arlene Mccoy"\n  }, {\n    id: 3,\n    name: "Devon Webb"\n  }, {\n    id: 4,\n    name: "Tom Cook"\n  }, {\n    id: 5,\n    name: "Tanya Fox"\n  }, {\n    id: 6,\n    name: "Hellen Schmidt"\n  }, {\n    id: 7,\n    name: "Chris Torres"\n  }, {\n    id: 8,\n    name: "Max"\n  }, {\n    id: 9,\n    name: "David"\n  }, {\n    id: 10,\n    name: "Logan"\n  }, {\n    id: 11,\n    name: "Andrew"\n  }]);\n  const [selected, setSelected] = React.useState({});\n  const [query, setQuery] = React.useState("");\n  const filteredPeople = query === "" ? users : users.filter(user => user.name.toLowerCase().replace(/\\s+/g, "").includes(query.toLowerCase().replace(/\\s+/g, "")));\n  return <Combobox value={selected} onChange={setSelected}>\n      <ComboboxTrigger>\n        <ComboboxInput displayValue={(user: {\n        id: number;\n        name: string;\n      }) => user.name} onChange={event => setQuery(event.target.value)} />\n        <ComboboxButton>\n          <Search />\n        </ComboboxButton>\n      </ComboboxTrigger>\n      <ScaleOutIn afterLeave={() => setQuery("")}>\n        <ComboboxOptions>\n          <ScrollArea className="h-[304px]">\n            {filteredPeople.map(user => <ComboboxOption key={user.id} value={user}>\n                {user.name}\n              </ComboboxOption>)}\n          </ScrollArea>\n        </ComboboxOptions>\n      </ScaleOutIn>\n    </Combobox>;\n}'},null===(_DefaultSm$parameters2=DefaultSm.parameters)||void 0===_DefaultSm$parameters2||null===(_DefaultSm$parameters2=_DefaultSm$parameters2.docs)||void 0===_DefaultSm$parameters2?void 0:_DefaultSm$parameters2.source)})}),DefaultSmRightIcon.parameters=_objectSpread(_objectSpread({},DefaultSmRightIcon.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_DefaultSmRightIcon$p=DefaultSmRightIcon.parameters)||void 0===_DefaultSmRightIcon$p?void 0:_DefaultSmRightIcon$p.docs),{},{source:_objectSpread({originalSource:'() => {\n  const [users] = React.useState([{\n    id: 1,\n    name: "Wade Cooper"\n  }, {\n    id: 2,\n    name: "Arlene Mccoy"\n  }, {\n    id: 3,\n    name: "Devon Webb"\n  }, {\n    id: 4,\n    name: "Tom Cook"\n  }, {\n    id: 5,\n    name: "Tanya Fox"\n  }, {\n    id: 6,\n    name: "Hellen Schmidt"\n  }, {\n    id: 7,\n    name: "Chris Torres"\n  }, {\n    id: 8,\n    name: "Max"\n  }, {\n    id: 9,\n    name: "David"\n  }, {\n    id: 10,\n    name: "Logan"\n  }, {\n    id: 11,\n    name: "Andrew"\n  }]);\n  const [selected, setSelected] = React.useState({});\n  const [query, setQuery] = React.useState("");\n  const filteredPeople = query === "" ? users : users.filter(user => user.name.toLowerCase().replace(/\\s+/g, "").includes(query.toLowerCase().replace(/\\s+/g, "")));\n  return <Combobox value={selected} onChange={setSelected}>\n      <ComboboxTrigger>\n        <ComboboxInput className="pl-3 pr-[34px]" displayValue={(user: {\n        id: number;\n        name: string;\n      }) => user.name} onChange={event => setQuery(event.target.value)} />\n        <ComboboxButton align="right">\n          <Search />\n        </ComboboxButton>\n      </ComboboxTrigger>\n      <ScaleOutIn afterLeave={() => setQuery("")}>\n        <ComboboxOptions>\n          <ScrollArea className="h-[304px]">\n            {filteredPeople.map(user => <ComboboxOption key={user.id} value={user}>\n                {user.name}\n              </ComboboxOption>)}\n          </ScrollArea>\n        </ComboboxOptions>\n      </ScaleOutIn>\n    </Combobox>;\n}'},null===(_DefaultSmRightIcon$p2=DefaultSmRightIcon.parameters)||void 0===_DefaultSmRightIcon$p2||null===(_DefaultSmRightIcon$p2=_DefaultSmRightIcon$p2.docs)||void 0===_DefaultSmRightIcon$p2?void 0:_DefaultSmRightIcon$p2.source)})}),DefaultLg.parameters=_objectSpread(_objectSpread({},DefaultLg.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_DefaultLg$parameters=DefaultLg.parameters)||void 0===_DefaultLg$parameters?void 0:_DefaultLg$parameters.docs),{},{source:_objectSpread({originalSource:'() => {\n  const [users] = React.useState([{\n    id: 1,\n    name: "Wade Cooper"\n  }, {\n    id: 2,\n    name: "Arlene Mccoy"\n  }, {\n    id: 3,\n    name: "Devon Webb"\n  }, {\n    id: 4,\n    name: "Tom Cook"\n  }, {\n    id: 5,\n    name: "Tanya Fox"\n  }, {\n    id: 6,\n    name: "Hellen Schmidt"\n  }, {\n    id: 7,\n    name: "Chris Torres"\n  }, {\n    id: 8,\n    name: "Max"\n  }, {\n    id: 9,\n    name: "David"\n  }, {\n    id: 10,\n    name: "Logan"\n  }, {\n    id: 11,\n    name: "Andrew"\n  }]);\n  const [selected, setSelected] = React.useState({});\n  const [query, setQuery] = React.useState("");\n  const filteredPeople = query === "" ? users : users.filter(user => user.name.toLowerCase().replace(/\\s+/g, "").includes(query.toLowerCase().replace(/\\s+/g, "")));\n  return <Combobox className="w-[320px]" value={selected} onChange={setSelected}>\n      <ComboboxTrigger>\n        <ComboboxInput size="lg" displayValue={(user: {\n        id: number;\n        name: string;\n      }) => user.name} onChange={event => setQuery(event.target.value)} />\n        <ComboboxButton size="lg">\n          <Search className="h-5 w-5" />\n        </ComboboxButton>\n      </ComboboxTrigger>\n      <ScaleOutIn afterLeave={() => setQuery("")}>\n        <ComboboxOptions>\n          <ScrollArea className="h-[304px]">\n            {filteredPeople.map(user => <ComboboxOption key={user.id} value={user}>\n                {user.name}\n              </ComboboxOption>)}\n          </ScrollArea>\n        </ComboboxOptions>\n      </ScaleOutIn>\n    </Combobox>;\n}'},null===(_DefaultLg$parameters2=DefaultLg.parameters)||void 0===_DefaultLg$parameters2||null===(_DefaultLg$parameters2=_DefaultLg$parameters2.docs)||void 0===_DefaultLg$parameters2?void 0:_DefaultLg$parameters2.source)})}),DefaultLgRightIcon.parameters=_objectSpread(_objectSpread({},DefaultLgRightIcon.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_DefaultLgRightIcon$p=DefaultLgRightIcon.parameters)||void 0===_DefaultLgRightIcon$p?void 0:_DefaultLgRightIcon$p.docs),{},{source:_objectSpread({originalSource:'() => {\n  const [users] = React.useState([{\n    id: 1,\n    name: "Wade Cooper"\n  }, {\n    id: 2,\n    name: "Arlene Mccoy"\n  }, {\n    id: 3,\n    name: "Devon Webb"\n  }, {\n    id: 4,\n    name: "Tom Cook"\n  }, {\n    id: 5,\n    name: "Tanya Fox"\n  }, {\n    id: 6,\n    name: "Hellen Schmidt"\n  }, {\n    id: 7,\n    name: "Chris Torres"\n  }, {\n    id: 8,\n    name: "Max"\n  }, {\n    id: 9,\n    name: "David"\n  }, {\n    id: 10,\n    name: "Logan"\n  }, {\n    id: 11,\n    name: "Andrew"\n  }]);\n  const [selected, setSelected] = React.useState({});\n  const [query, setQuery] = React.useState("");\n  const filteredPeople = query === "" ? users : users.filter(user => user.name.toLowerCase().replace(/\\s+/g, "").includes(query.toLowerCase().replace(/\\s+/g, "")));\n  return <Combobox className="w-[320px]" value={selected} onChange={setSelected}>\n      <ComboboxTrigger>\n        <ComboboxInput className="pl-3.5 pr-[42px]" size="lg" displayValue={(user: {\n        id: number;\n        name: string;\n      }) => user.name} onChange={event => setQuery(event.target.value)} />\n        <ComboboxButton size="lg" align="right">\n          <Search className="h-5 w-5" />\n        </ComboboxButton>\n      </ComboboxTrigger>\n      <ScaleOutIn afterLeave={() => setQuery("")}>\n        <ComboboxOptions>\n          <ScrollArea className="h-[304px]">\n            {filteredPeople.map(user => <ComboboxOption key={user.id} value={user}>\n                {user.name}\n              </ComboboxOption>)}\n          </ScrollArea>\n        </ComboboxOptions>\n      </ScaleOutIn>\n    </Combobox>;\n}'},null===(_DefaultLgRightIcon$p2=DefaultLgRightIcon.parameters)||void 0===_DefaultLgRightIcon$p2||null===(_DefaultLgRightIcon$p2=_DefaultLgRightIcon$p2.docs)||void 0===_DefaultLgRightIcon$p2?void 0:_DefaultLgRightIcon$p2.source)})}),GraySm.parameters=_objectSpread(_objectSpread({},GraySm.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_GraySm$parameters=GraySm.parameters)||void 0===_GraySm$parameters?void 0:_GraySm$parameters.docs),{},{source:_objectSpread({originalSource:'() => {\n  const [users] = React.useState([{\n    id: 1,\n    name: "Wade Cooper"\n  }, {\n    id: 2,\n    name: "Arlene Mccoy"\n  }, {\n    id: 3,\n    name: "Devon Webb"\n  }, {\n    id: 4,\n    name: "Tom Cook"\n  }, {\n    id: 5,\n    name: "Tanya Fox"\n  }, {\n    id: 6,\n    name: "Hellen Schmidt"\n  }, {\n    id: 7,\n    name: "Chris Torres"\n  }, {\n    id: 8,\n    name: "Max"\n  }, {\n    id: 9,\n    name: "David"\n  }, {\n    id: 10,\n    name: "Logan"\n  }, {\n    id: 11,\n    name: "Andrew"\n  }]);\n  const [selected, setSelected] = React.useState({});\n  const [query, setQuery] = React.useState("");\n  const filteredPeople = query === "" ? users : users.filter(user => user.name.toLowerCase().replace(/\\s+/g, "").includes(query.toLowerCase().replace(/\\s+/g, "")));\n  return <Combobox value={selected} onChange={setSelected}>\n      <ComboboxTrigger>\n        <ComboboxInput visual="gray" displayValue={(user: {\n        id: number;\n        name: string;\n      }) => user.name} onChange={event => setQuery(event.target.value)} />\n        <ComboboxButton>\n          <Search />\n        </ComboboxButton>\n      </ComboboxTrigger>\n      <ScaleOutIn afterLeave={() => setQuery("")}>\n        <ComboboxOptions>\n          <ScrollArea className="h-[304px]">\n            {filteredPeople.map(user => <ComboboxOption key={user.id} value={user}>\n                {user.name}\n              </ComboboxOption>)}\n          </ScrollArea>\n        </ComboboxOptions>\n      </ScaleOutIn>\n    </Combobox>;\n}'},null===(_GraySm$parameters2=GraySm.parameters)||void 0===_GraySm$parameters2||null===(_GraySm$parameters2=_GraySm$parameters2.docs)||void 0===_GraySm$parameters2?void 0:_GraySm$parameters2.source)})}),GraySmRightIcon.parameters=_objectSpread(_objectSpread({},GraySmRightIcon.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_GraySmRightIcon$para=GraySmRightIcon.parameters)||void 0===_GraySmRightIcon$para?void 0:_GraySmRightIcon$para.docs),{},{source:_objectSpread({originalSource:'() => {\n  const [users] = React.useState([{\n    id: 1,\n    name: "Wade Cooper"\n  }, {\n    id: 2,\n    name: "Arlene Mccoy"\n  }, {\n    id: 3,\n    name: "Devon Webb"\n  }, {\n    id: 4,\n    name: "Tom Cook"\n  }, {\n    id: 5,\n    name: "Tanya Fox"\n  }, {\n    id: 6,\n    name: "Hellen Schmidt"\n  }, {\n    id: 7,\n    name: "Chris Torres"\n  }, {\n    id: 8,\n    name: "Max"\n  }, {\n    id: 9,\n    name: "David"\n  }, {\n    id: 10,\n    name: "Logan"\n  }, {\n    id: 11,\n    name: "Andrew"\n  }]);\n  const [selected, setSelected] = React.useState({});\n  const [query, setQuery] = React.useState("");\n  const filteredPeople = query === "" ? users : users.filter(user => user.name.toLowerCase().replace(/\\s+/g, "").includes(query.toLowerCase().replace(/\\s+/g, "")));\n  return <Combobox value={selected} onChange={setSelected}>\n      <ComboboxTrigger>\n        <ComboboxInput visual="gray" className="pl-3 pr-[34px]" displayValue={(user: {\n        id: number;\n        name: string;\n      }) => user.name} onChange={event => setQuery(event.target.value)} />\n        <ComboboxButton align="right">\n          <Search />\n        </ComboboxButton>\n      </ComboboxTrigger>\n      <ScaleOutIn afterLeave={() => setQuery("")}>\n        <ComboboxOptions>\n          <ScrollArea className="h-[304px]">\n            {filteredPeople.map(user => <ComboboxOption key={user.id} value={user}>\n                {user.name}\n              </ComboboxOption>)}\n          </ScrollArea>\n        </ComboboxOptions>\n      </ScaleOutIn>\n    </Combobox>;\n}'},null===(_GraySmRightIcon$para2=GraySmRightIcon.parameters)||void 0===_GraySmRightIcon$para2||null===(_GraySmRightIcon$para2=_GraySmRightIcon$para2.docs)||void 0===_GraySmRightIcon$para2?void 0:_GraySmRightIcon$para2.source)})}),GrayLg.parameters=_objectSpread(_objectSpread({},GrayLg.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_GrayLg$parameters=GrayLg.parameters)||void 0===_GrayLg$parameters?void 0:_GrayLg$parameters.docs),{},{source:_objectSpread({originalSource:'() => {\n  const [users] = React.useState([{\n    id: 1,\n    name: "Wade Cooper"\n  }, {\n    id: 2,\n    name: "Arlene Mccoy"\n  }, {\n    id: 3,\n    name: "Devon Webb"\n  }, {\n    id: 4,\n    name: "Tom Cook"\n  }, {\n    id: 5,\n    name: "Tanya Fox"\n  }, {\n    id: 6,\n    name: "Hellen Schmidt"\n  }, {\n    id: 7,\n    name: "Chris Torres"\n  }, {\n    id: 8,\n    name: "Max"\n  }, {\n    id: 9,\n    name: "David"\n  }, {\n    id: 10,\n    name: "Logan"\n  }, {\n    id: 11,\n    name: "Andrew"\n  }]);\n  const [selected, setSelected] = React.useState({});\n  const [query, setQuery] = React.useState("");\n  const filteredPeople = query === "" ? users : users.filter(user => user.name.toLowerCase().replace(/\\s+/g, "").includes(query.toLowerCase().replace(/\\s+/g, "")));\n  return <Combobox className="w-[320px]" value={selected} onChange={setSelected}>\n      <ComboboxTrigger>\n        <ComboboxInput size="lg" visual="gray" displayValue={(user: {\n        id: number;\n        name: string;\n      }) => user.name} onChange={event => setQuery(event.target.value)} />\n        <ComboboxButton size="lg">\n          <Search className="h-5 w-5" />\n        </ComboboxButton>\n      </ComboboxTrigger>\n      <ScaleOutIn afterLeave={() => setQuery("")}>\n        <ComboboxOptions>\n          <ScrollArea className="h-[304px]">\n            {filteredPeople.map(user => <ComboboxOption key={user.id} value={user}>\n                {user.name}\n              </ComboboxOption>)}\n          </ScrollArea>\n        </ComboboxOptions>\n      </ScaleOutIn>\n    </Combobox>;\n}'},null===(_GrayLg$parameters2=GrayLg.parameters)||void 0===_GrayLg$parameters2||null===(_GrayLg$parameters2=_GrayLg$parameters2.docs)||void 0===_GrayLg$parameters2?void 0:_GrayLg$parameters2.source)})}),GrayLgRightIcon.parameters=_objectSpread(_objectSpread({},GrayLgRightIcon.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_GrayLgRightIcon$para=GrayLgRightIcon.parameters)||void 0===_GrayLgRightIcon$para?void 0:_GrayLgRightIcon$para.docs),{},{source:_objectSpread({originalSource:'() => {\n  const [users] = React.useState([{\n    id: 1,\n    name: "Wade Cooper"\n  }, {\n    id: 2,\n    name: "Arlene Mccoy"\n  }, {\n    id: 3,\n    name: "Devon Webb"\n  }, {\n    id: 4,\n    name: "Tom Cook"\n  }, {\n    id: 5,\n    name: "Tanya Fox"\n  }, {\n    id: 6,\n    name: "Hellen Schmidt"\n  }, {\n    id: 7,\n    name: "Chris Torres"\n  }, {\n    id: 8,\n    name: "Max"\n  }, {\n    id: 9,\n    name: "David"\n  }, {\n    id: 10,\n    name: "Logan"\n  }, {\n    id: 11,\n    name: "Andrew"\n  }]);\n  const [selected, setSelected] = React.useState({});\n  const [query, setQuery] = React.useState("");\n  const filteredPeople = query === "" ? users : users.filter(user => user.name.toLowerCase().replace(/\\s+/g, "").includes(query.toLowerCase().replace(/\\s+/g, "")));\n  return <Combobox className="w-[320px]" value={selected} onChange={setSelected}>\n      <ComboboxTrigger>\n        <ComboboxInput className="pl-3.5 pr-[42px]" size="lg" visual="gray" displayValue={(user: {\n        id: number;\n        name: string;\n      }) => user.name} onChange={event => setQuery(event.target.value)} />\n        <ComboboxButton size="lg" align="right">\n          <Search className="h-5 w-5" />\n        </ComboboxButton>\n      </ComboboxTrigger>\n      <ScaleOutIn afterLeave={() => setQuery("")}>\n        <ComboboxOptions>\n          <ScrollArea className="h-[304px]">\n            {filteredPeople.map(user => <ComboboxOption key={user.id} value={user}>\n                {user.name}\n              </ComboboxOption>)}\n          </ScrollArea>\n        </ComboboxOptions>\n      </ScaleOutIn>\n    </Combobox>;\n}'},null===(_GrayLgRightIcon$para2=GrayLgRightIcon.parameters)||void 0===_GrayLgRightIcon$para2||null===(_GrayLgRightIcon$para2=_GrayLgRightIcon$para2.docs)||void 0===_GrayLgRightIcon$para2?void 0:_GrayLgRightIcon$para2.source)})}),DefaultSm.__docgenInfo={description:"",methods:[],displayName:"DefaultSm"},DefaultSmRightIcon.__docgenInfo={description:"",methods:[],displayName:"DefaultSmRightIcon"},DefaultLg.__docgenInfo={description:"",methods:[],displayName:"DefaultLg"},DefaultLgRightIcon.__docgenInfo={description:"",methods:[],displayName:"DefaultLgRightIcon"},GraySm.__docgenInfo={description:"",methods:[],displayName:"GraySm"},GraySmRightIcon.__docgenInfo={description:"",methods:[],displayName:"GraySmRightIcon"},GrayLg.__docgenInfo={description:"",methods:[],displayName:"GrayLg"},GrayLgRightIcon.__docgenInfo={description:"",methods:[],displayName:"GrayLgRightIcon"}}}]);